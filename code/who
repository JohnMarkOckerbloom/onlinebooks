#!/usr/bin/perl

# BEGIN LINES that change in test version
BEGIN {
$OLBP::SCRIPTNAME = "book";
}

use lib "/websites/OnlineBooks/nonpublic/lib";
use lib "nlib";
use CGI;
use OLBP;
use OLBP::Hash;
use OLBP::AgentPage;
use OLBP::AuthorNote;
use OLBP::SubjectHierarchyBrowser;

my $default        = "https://onlinebooks.library.upenn.edu";
my $wikiagentroot  = $OLBP::dbdir . "who";
my $extradir       = $OLBP::dbdir . "exindexes/";

# returns the path to the directory for this agent, or undef if none exists
# For now, we'll assume the arg is always the Q-number, but we could
# potentially support looking up other args in the future

sub find_dir {
  my ($id) = @_;
  if ($id =~ /^Q(\d+)$/) {
    my $idnum = $1;
    my $idsubdir = sprintf("%02d", ($idnum % 100));
    my $path = "$wikiagentroot/$idsubdir/$id";
    return $path if (-d $path);
  }
  return undef;
}

sub showagent {
  my ($qid, $dir, $authornote) = @_;
  my $subbrowser = new OLBP::SubjectHierarchyBrowser();
  my $page = new OLBP::AgentPage(id=>$qid, authornote=>$authornote,
                                 dir=>$dir, subbrowser=>$subbrowser);
  my $heading = $page->get_heading();

  print qq^<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8">
<link rel="stylesheet" type="text/css" href="$OLBP::styleurl" />
<link rel="stylesheet" type="text/css" href="$OLBP::AgentPage::styleurl" />
<meta name="viewport" content="width=device-width, initial-scale=1.0">
^;
  print "<title>$heading | The Online Books Page</title></head>";
  print $OLBP::bodystart;
  $page->display();
  print OLBP::result_tips();
  print OLBP::choicelist();
  print $OLBP::bodyend;
}
 
sub url_decode {
  my $str = shift;
  $str =~ s/\+/ /g;
  $str =~ s/%([a-fA-F0-9][a-fA-F0-9])/chr(hex($1))/eg;
  return $str;
}

sub gethashval {
  my ($name, $key, $dir) = @_;

  return undef if (!$name);
  my $fname = OLBP::hashfilename($name, $dir);
  $hash = new OLBP::Hash(name=>$name, filename=>$fname, cache=>1);
  return undef if (!$hash);
  return $hash->get_value(key=>$key);
}

# return a simple author note with the given name
# name can come from outside input, so it needs to be sanitized

sub simpleauthornote {
  my ($name) = @_;
  my $formalname = OLBP::html_encode($name);
  my $informalname = OLBP::Name::informal($formalname);
  return new OLBP::AuthorNote(name=>$formalname, informal=>$informalname);
}


sub getout {
  print "Location: $default\n\n";
  exit 0;
}

my $q = new CGI;
my $arg = $q->url(-path_info=>1);
$arg =~ s/(.*)\///;
my $qid;
my $whodir;
my $authornote;

# validate inputs - must be a QID or a name search key ASCII alphanumeric and hyphen
if (!$arg) {
  getout();
}
if ($arg =~ /^Q[0-9]+$/) {
  $qid = $arg;
  $whodir = find_dir($arg);
} else {
  # might be a name search key
  my $name = url_decode($arg);
  my $skey = OLBP::BookRecord::search_key_for_name($name);
  if ($skey) {
    $qid = gethashval("who", $skey, $OLBP::dbdir);
    if ($qid) {
      $whodir = find_dir($qid);
    }
    if (!$whodir) {
      my $skey = OLBP::BookRecord::sort_key_for_name($name);
      if ($skey) {
        my $notestr = gethashval("authornotes", $skey);
        if ($notestr) {
          $authornote = new OLBP::AuthorNote(string=>$notestr);
        } else {
          # if no note, might want to check if it's in the extended shelves
          my $exval = gethashval("authortitles", $skey, $extradir);
          # can also check for name as subject in regular or exgtended shelves
          if (!$exval) {
            # Look them up in the subjects
            $skey = OLBP::BookRecord::search_key_for_subject($name);
            $exval = gethashval("booksubnotes", $skey);
          }
          if (!$exval) {
            # OK, maybe check extended shelves too
            my $hash = OLBP::termhash("booksubnotes", $skey);
            $exval = gethashval($hash, $skey, $extradir);
          }
          if (defined($exval)) {
            $authornote = simpleauthornote($name);
          }
        }
      }
    }
  }
  #print "Content-type: text/html\n\n";
  #print "<html><body>Name is '$arg'; skey is '$skey'; whodir is '$whodir'</body></html>";
  #exit 0;
}


if (!$whodir && !$authornote) {
  getout();
}

binmode STDOUT, ":utf8";
if (defined($ENV{"GATEWAY_INTERFACE"})) {
  print "Content-type: text/html\n\n";
}

showagent($qid, $whodir, $authornote);
