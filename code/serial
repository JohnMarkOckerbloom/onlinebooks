#!/usr/bin/perl

use lib "/websites/OnlineBooks/nonpublic/lib";
#use lib "nlib";
use OLBP;
use OLBP::Hash;

$idxdir =  "/websites/OnlineBooks/nonpublic/bookdb/indexes/";

$booksurl = $OLBP::homepage;

$scriteria = $booksurl . "serial-criteria.html";
$slist     = $booksurl . "serials.html";

sub gethashval {
  my ($name, $key) = @_;

  return undef if (!$name);
  my $hash = $hashes->{$name};
  if (!$hash) {
    my $fname = OLBP::hashfilename($name, $idxdir);
    $hash = new OLBP::Hash(name=>$name, filename=>$fname, cache=>1);
    return undef if (!$hash);
    $hashes->{name} = $hash;
  }
  return $hash->get_value(key=>$key);
}

sub readrecord {
  my $str = shift;
  my @lines = split /\n/, $str;
  my $line;
  my $recr = {};
  while ($line = shift @lines) {
    if (!($line =~ /\S/)) {
      return $recr;
    }
    if (!($line =~ /^#/)) {
      ($attr, $val) = split / /, $line, 2;
      if (($attr eq "SREF") || ($attr eq "SOSC") || ($attr eq "SREL")) {
        push @{$recr->{$attr}}, $val;
      }
      else {
        $recr->{$attr} = $val;
      }
    }
  }
  return $recr;
}

sub showmag {
  my $recr = shift;
  my $name = $recr->{TITLE};
  my $str;
  print qq^<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8">
<link rel="stylesheet" type="text/css" href="$OLBP::styleurl" />
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<style type="text/css">
  p.ctr {text-align: center}
  h1 {text-align: center}
  h2 {text-align: center}
  h3 {text-align: center}
</style>
^;
  print "<title>$name archives</title></head>";
  print $OLBP::bodystart;
  print "<p class=\"ctr\">presents serial archive listings for</p>\n";
  print "<h1>$name</h1>\n";
  if ($recr->{SDESC}) {
    $str = $recr->{SDESC};
    $str =~ s/\*THIS\*/"<cite>" . $name . "<\/cite>"/ge;
    print "<p>$str</p>\n";
  }
  if ($recr->{SHIST}) {
    $str = $recr->{SHIST};
    print "<h3>Publication History</h3>\n";
    $str =~ s/\*THIS\*/"<cite>" . $name . "<\/cite>"/ge;
    $str =~ s/\*TODAY\*/It is still published today./;
    print "<p>$str</p>\n";
  }
  if ($recr->{SREF}) {
    print "<h3>Persistent Archives of Complete Issues</h3>\n";
    print "<ul>\n";
    foreach $sr (@{$recr->{SREF}}) {
      my ($years, $url, $desc) = split(/ /, $sr, 3);
      if ($desc =~ /(.*)\*(.*)\*(.*)/) {
         $desc = "$1<a href=\"$url\">$2</a>$3";
      #if ($desc =~ /\*(.*)\*/) {
      #  $desc =~ s/\*/<a href=\"$url\">/;
      #  $desc =~ s/\*/<\/a>/;
        $years =~ s/_/ /g;
        $years =~ s/,(\w)/, $1/g;
        print "<li> <strong>$years:</strong> $desc</li>\n";
      } else {
        print "<li> <a href=\"$url\">$years:</a> $desc</li>\n";
      }
    }
    print "</ul>\n";
  }
  if ($recr->{SOSC}) {
    print "<h3>Official Site / Current Material</h3>\n";
    print "<ul>\n";
    foreach $sr (@{$recr->{SOSC}}) {
      my ($url, $desc) = split(/ /, $sr, 2);
      if ($desc =~ /\*(.*)\*/) {
        $desc =~ s/\*/<a href=\"$url\">/;
        $desc =~ s/\*/<\/a>/;
        print "<li> $desc</li>\n";
      } else {
        print "<li> <a href=\"$url\">Link:</a> $desc</li>\n";
      }
    }
    print "</ul>\n";
  }
  if ($recr->{SREL}) {
    print "<h3>Related Resources</h3>\n";
    print "<ul>\n";
    foreach $sr (@{$recr->{SREL}}) {
      my ($url, $desc) = split(/ /, $sr, 2);
      if ($desc =~ /\*(.*)\*/) {
        $desc =~ s/\*/<a href=\"$url\">/;
        $desc =~ s/\*/<\/a>/;
        print "<li> $desc</li>\n";
      } else {
        print "<li> <a href=\"$url\">Link:</a> $desc</li>\n";
      }
    }
    print "</ul>\n";
  }
  print "<hr>";
  print "<p><em>This is a record of a major ";
  print "<a href=\"$slist\">serial archive</a>.  This page is maintained ";
  print "for <a href=\"$OLBP::homepage\">The Online Books Page</a>.\n";
  print "(See <a href=\"$scriteria\">our criteria for listing serial ";
  print "archives</a>.) ";
  print "This page has no affiliation with the serial or its publisher.";
  print "</em></p>";
  print OLBP::result_tips();
  print OLBP::choicelist();
  print $OLBP::bodyend;
}

sub getout {
  print "Location: $slist\n\n";
  exit 0;
}

if (defined($ENV{"GATEWAY_INTERFACE"})) {
  $command = $ENV{"PATH_INFO"};
  $command = substr($command, 1);
  $query = $ENV{"QUERY_STRING"};
  $query =~ tr/+/ /;
  $query =~ s/%([0-9A-Fa-f][0-9A-Fa-f])/chr(hex($1))/eg;
} else {
  $command = $ARGV[0];
  $query = $ARGV[1];
}

%options = split /[&=]/, $query;

$lookid = $options{id};
if (!$lookid) {
  getout();
}

$str = gethashval("serials", $lookid);
if (!$str) {
  getout();
}

$recr = readrecord($str);
if (!$recr->{TITLE}) {
  getout();
} 

if (defined($ENV{"GATEWAY_INTERFACE"})) {
  print "Content-type: text/html\n\n";
}

showmag($recr);



